{"ast":null,"code":"import _slicedToArray from \"/home/chiranjivi/Chiranjiv/Reactjs/hooks_project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chiranjivi/Chiranjiv/Reactjs/hooks_project/src/component/Hooks.js\";\nimport React, { useState } from 'react';\n\nconst HookCounter = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setIncrement = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showAlert = _useState4[0],\n        setShowAlert = _useState4[1];\n\n  const incrementByFive = () => {\n    setIncrement(count + 1);\n  };\n\n  const drecrement = () => {\n    if (count > 2) {\n      return setShowAlert(!showAlert);\n    }\n  };\n\n  console.log('showAlert', showAlert);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, showAlert == true ? alert('You reached maximum limit please Decrese your count') : '', React.createElement(\"button\", {\n    onClick: count < 5 ? incrementByFive : drecrement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"IncrementByFive\", count));\n};\n\nexport default HookCounter;","map":{"version":3,"sources":["/home/chiranjivi/Chiranjiv/Reactjs/hooks_project/src/component/Hooks.js"],"names":["React","useState","HookCounter","count","setIncrement","showAlert","setShowAlert","incrementByFive","drecrement","console","log","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACQD,QAAQ,CAAC,CAAD,CADhB;AAAA;AAAA,QACfE,KADe;AAAA,QACRC,YADQ;;AAAA,qBAEYH,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,QAEfI,SAFe;AAAA,QAEJC,YAFI;;AAItB,QAAMC,eAAe,GAAG,MAAM;AAC1BH,IAAAA,YAAY,CAACD,KAAK,GAAG,CAAT,CAAZ;AACH,GAFD;;AAIA,QAAMK,UAAU,GAAG,MAAM;AAErB,QAAIL,KAAK,GAAG,CAAZ,EAAe;AACX,aAAOG,YAAY,CAAC,CAACD,SAAF,CAAnB;AACH;AAEJ,GAND;;AAOJI,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBL,SAAxB;AACI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,SAAS,IAAI,IAAb,GAAoBM,KAAK,CAAC,qDAAD,CAAzB,GAAmF,EADxF,EAEI;AAAQ,IAAA,OAAO,EAAER,KAAK,GAAG,CAAR,GAAYI,eAAZ,GAA8BC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4EL,KAA5E,CAFJ,CADJ;AAMH,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst HookCounter = () => {\n    const [count, setIncrement] = useState(0);\n    const [showAlert, setShowAlert] = useState(false);\n\n    const incrementByFive = () => {\n        setIncrement(count + 1)\n    }\n\n    const drecrement = () => {\n\n        if (count > 2) {\n            return setShowAlert(!showAlert)\n        }\n\n    }\nconsole.log('showAlert',showAlert)\n    return (\n        <div>\n            {showAlert == true ? alert('You reached maximum limit please Decrese your count') : ''}\n            <button onClick={count < 5 ? incrementByFive : drecrement} >IncrementByFive{count}</button>\n        </div>\n    )\n}\n\nexport default HookCounter; "]},"metadata":{},"sourceType":"module"}