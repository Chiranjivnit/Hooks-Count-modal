{"ast":null,"code":"import _slicedToArray from \"/home/chiranjivi/Chiranjiv/Reactjs/hooks_project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chiranjivi/Chiranjiv/Reactjs/hooks_project/src/component/Hooks.js\";\nimport React, { useState } from 'react';\n\nconst HookCounter = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 3),\n        count = _useState2[0],\n        handleIncrement = _useState2[1],\n        handleDrecement = _useState2[2];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleIncrement(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"+ \", count), React.createElement(\"button\", {\n    onClick: () => handleDrecement(count - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"- \", count));\n};\n\nexport default HookCounter;","map":{"version":3,"sources":["/home/chiranjivi/Chiranjiv/Reactjs/hooks_project/src/component/Hooks.js"],"names":["React","useState","HookCounter","count","handleIncrement","handleDrecement"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBAC4BD,QAAQ,CAAC,CAAD,CADpC;AAAA;AAAA,QACfE,KADe;AAAA,QACRC,eADQ;AAAA,QACSC,eADT;;AAGtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAMD,eAAe,CAACD,KAAK,GAAG,CAAT,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuDA,KAAvD,CADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAME,eAAe,CAACF,KAAK,GAAG,CAAT,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsDA,KAAtD,CAFJ,CADJ;AAMH,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst HookCounter = () => {\n    const [count, handleIncrement, handleDrecement] = useState(0);\n\n    return (\n        <div>\n            <button onClick={() => handleIncrement(count + 1)} >+ {count}</button>\n            <button onClick={() => handleDrecement(count - 1)}>- {count}</button>\n        </div>\n    )\n}\n\nexport default HookCounter;"]},"metadata":{},"sourceType":"module"}